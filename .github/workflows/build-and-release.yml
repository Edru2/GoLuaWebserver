name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
     matrix:
       include:
         - os: ubuntu-latest
           goos: linux
           goarch: amd64
           suffix: so
           make: make
           cc: gcc
         - os: macos-latest
           goos: darwin
           goarch: amd64
           suffix: dylib
           make: make
           cc: clang
         - os: ubuntu-latest
           goos: windows
           goarch: 386
           suffix: dll
           cc: i686-w64-mingw32-gcc
           make: make
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22'
      - name: InstallMinGW
        if: matrix.goos == 'windows'
        run: sudo apt-get install -y mingw-w64 gcc-multilib
      - name: Build
        run: |
          ${{ matrix.make }} ${{ matrix.goos }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: GoLuaWebserver-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ./*.${{ matrix.suffix }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Setup GitHub CLI
        uses: actions/setup-cli@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ github.run_number }}-${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ARTIFACTS_DIR=artifacts
          VERSION=release-${{ github.run_number }}-${{ github.sha }}

          for FILE in $ARTIFACTS_DIR/*; do
            echo "Uploading $FILE to release $VERSION"
            gh release upload "$VERSION" "$FILE" --repo ${{ github.repository }}
          done
        shell: bash
